PROJECT (coda)
CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
INCLUDE (CMakeMacro.cmake)

USE_PACKAGE (expat expat.h)

AUX_SOURCE_DIRECTORY (coda/ SRC_coda)
ADD_LIBRARY (coda ${SRC_coda})
TARGET_LINK_LIBRARIES (coda ${LIB_expat} pthread)
INSTALL (TARGETS coda DESTINATION lib)
INSTALL (DIRECTORY coda/ DESTINATION include/coda FILES_MATCHING PATTERN "*.h")
INSTALL (DIRECTORY coda/ DESTINATION include/coda FILES_MATCHING PATTERN "*.hpp")
INSTALL (DIRECTORY coda/ DESTINATION include/coda FILES_MATCHING PATTERN "*.tcc")
SET_TARGET_PROPERTIES (coda PROPERTIES VERSION 0.1 SOVERSION 1)

ADD_EXECUTABLE (coda_url_parser tests/url_parser/test.cpp)
TARGET_LINK_LIBRARIES (coda_url_parser coda)
INSTALL (TARGETS coda_url_parser DESTINATION bin)

ADD_EXECUTABLE (test_cache tests/cache/test.cpp)
TARGET_LINK_LIBRARIES (test_cache coda)

ADD_EXECUTABLE (test_stringstorage tests/stringstorage/test.c)
TARGET_LINK_LIBRARIES (test_stringstorage coda)

ADD_EXECUTABLE (test_base58 tests/base58/test.c)
TARGET_LINK_LIBRARIES (test_base58 coda)

SET (CPACK_GENERATOR RPM DEB)
SET (VERSION 0.1.16)
SET (CPACK_PACKAGE_VERSION ${VERSION})
SET (CPACK_GENERATOR "RPM" "DEB" "ZIP" "TGZ")
SET (CPACK_PACKAGE_NAME "libcoda")
SET (CPACK_PACKAGE_CONTACT "support@wavesplatform.com")
SET (CPACK_PACKAGE_RELEASE 1)
SET (CPACK_RPM_PACKAGE_AUTOREQ "no")
SET (CPACK_RPM_PACKAGE_AUTOREQPROV "no")
SET (CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
SET (CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
SET (CPACK_PACKAGE_VENDOR "Waves Platform")
configure_file("${CMAKE_CURRENT_SOURCE_DIR}/libcoda.spec.in"
  "${CMAKE_CURRENT_BINARY_DIR}/libcoda.spec"
  @ONLY IMMEDIATE)
SET (CPACK_RPM_USER_BINARY_SPECFILE "${CMAKE_SOURCE_DIR}/libcoda.spec")
INCLUDE (CPack)
